// module/powerflow/autotest/test_building_1.glm

#set randomseed=1

module powerflow
{
	message_flags DEBUG;
#ifexist ../data/building_defaults.csv
	building_defaults "../data/building_defaults.csv";
#endif
#ifexist ../data/building_loadshapes.csv
	building_loadshapes "../data/building_loadshapes.csv";
#endif
#ifexist ../data/building_occupancy.csv
	building_occupancy "../data/building_occupancy.csv";
#endif
}
module tape
{
	csv_header_type NAME;
}
clock
{
	timezone "PST+8PDT";
	starttime "2020-01-01 00:00:00 PST";
	stoptime "2021-01-01 00:00:00 PST";
}
#weather get CA-San_Francisco_Intl_Ap.tmy3
#input "CA-San_Francisco_Intl_Ap.tmy3" --property=name=weather

schedule setpoint
{
	* 7-17 * * 1-5 22.0;
	* 18-6 * 10-4 1-5 18.0;
	* 18-6 * 5-9 1-5 24.0;
	* * * 10-4 6-0 18.0;
	* * * 5-9 6-0 24.0; 
}

object building
{
	phases AN;
	nominal_voltage 240;
	building_type RETAIL;

	// inputs
	NH 4;
	floor_area 150 m^2;
	TS setpoint;

	temperature_source "weather.temperature";
	solar_source "weather.solar_global";
	heating_design "weather.record.low";
	cooling_design "weather.record.high";
	electric_heat TRUE;
	electrification_fraction 0.5;
	electrification_efficiency 2.0;
	occupancy 4;

	measured_demand_timestep 30day;
	object recorder 
	{
		property "measured_real_power[kW],TO,TA,QH";
		file ${modelname/.glm/.csv};
		interval 1h;
		line_units NONE;
	};
}

#set filesave_options=ALLINITIAL
#set dumpfile=gridlabd.json
#set savefile=${modelname/.glm/.json}

#ifexist "../${modelname/.glm/.csv}"
#on_exit 0 diff ../${modelname/.glm/.csv} ${modelname/.glm/.csv} > gridlabd.diff
#else
#on_exit 0 gridlabd plot -i=${modelname/.glm/.csv} --plot:y='TO,TA,measured_real_power[kW]' --plot:grid=True --plot:legend=True --show
#endif
