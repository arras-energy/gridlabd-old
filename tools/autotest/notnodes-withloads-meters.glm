// JSON to GLM Converter Output
// InputFile 'notnodes-withloads-meters.json'
// CreateDate '2023-05-16 12:47:02 '


// CLOCK
clock {
	timezone PST8PDT;
	starttime "2023-01-01 00:00:00 PST";
	stoptime "2023-01-02 00:00:00 PST";
}

// MODULES
module powerflow
{
	show_matrix_values FALSE;
	primary_voltage_ratio +60 pu;
	nominal_frequency +60 Hz;
	require_voltage_control FALSE;
	geographic_degree +0;
	fault_impedance +1e-06+0j Ohm;
	ground_impedance +1e-06+0j Ohm;
	warning_underfrequency +55 Hz;
	warning_overfrequency +65 Hz;
	warning_undervoltage +0.8 V;
	warning_overvoltage +1.2 V;
	warning_voltageangle +2;
	maximum_voltage_error +1e-06 V;
	solver_method NR;
	NR_matrix_output_interval NEVER;
	NR_matrix_output_references FALSE;
	NR_matrix_output_rhs FALSE;
	NR_island_failure_handled FALSE;
	line_capacitance FALSE;
	line_limits TRUE;
	NR_iteration_limit 500;
	NR_deltamode_iteration_limit 10;
	NR_superLU_procs 1;
	default_maximum_voltage_error +1e-06 pu;
	default_maximum_power_error +0.0001 pu;
	NR_admit_change TRUE;
	enable_subsecond_models FALSE;
	all_powerflow_delta FALSE;
	deltamode_timestep +1e+07 ns;
	current_frequency +60 Hz;
	master_frequency_update FALSE;
	enable_frequency_dependence FALSE;
	default_resistance +0.0001 Ohm;
	enable_inrush FALSE;
	low_voltage_impedance_level +0.7 pu;
	enable_mesh_fault_current FALSE;
	convergence_error_handling FATAL;
	solver_profile_enable FALSE;
	solver_profile_filename solver_nr_profile.txt;
	solver_profile_headers_included TRUE;
	solver_headers timestamp,duration[microsec],iteration,bus_count,branch_count,error;
	solver_profile_csv FALSE;
	solver_py_config /usr/local/opt/gridlabd/var/gridlabd/solver_py.conf;
	solver_dump_enable FALSE;
	violation_count 0;
	violation_active 0;
	violation_watchset ALL;
	voltage_violation_threshold +0.05 pu;
	undervoltage_violation_threshold +0 pu;
	overvoltage_violation_threshold +0 pu;
	voltage_fluctuation_threshold +0.03 pu;
	DER_violation_test ANY;
	default_continuous_rating +1000 A;
	default_emergency_rating +2000 A;
	default_violation_rating +0 A;
	market_price_name current_market.clearing_price;
	repair_time +24 h;
	wind_speed_name wind_speed;
	wind_dir_name wind_dir;
	wind_gust_name wind_gust;
	stop_on_pole_failure FALSE;
	climate_impact_zone NONE;
	building_defaults building_defaults.csv;
	building_loadshapes building_loadshapes.csv;
	building_occupancy building_occupancy.csv;
	inverter_settings inverter_settings.csv;
	NAICS_datafile naics_data_file.csv;
	ground_temperature +25 degC;
	warning_cable_temperature +80 degC;
	alert_cable_temperature +90 degC;
	ductbank_configuration_file ductbank_configurations.csv;
	air_effective_conductivity +0.2 W/K*m;
}
module assert
{
}
module tape
{
	gnuplot_path /usr/bin/gnuplot;
	flush_interval 0;
	csv_data_only 0;
	csv_header_type FULL;
	csv_keep_clean 0;
	delta_mode_needed NEVER;
}

// GLOBALS
// version.major is set to 4
// version.minor is set to 3
// version.patch is set to 1
// version.build is set to 230512
// version.branch is set to develop_fix_create_meters
// version is set to 4.3.1-230512-develop_fix_create_meters
// command_line is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/bin/gridlabd.bin -D randomseed=1 -C ../notnodes-withloads.glm -o notnodes-withloads.json
#ifndef environment
#define environment=batch
#else
#set environment=batch
#endif //environment
#ifndef quiet
global bool quiet FALSE;
#else
#set quiet=FALSE
#endif //quiet
#ifndef warn
global bool warn TRUE;
#else
#set warn=TRUE
#endif //warn
#ifndef debugger
global bool debugger FALSE;
#else
#set debugger=FALSE
#endif //debugger
#ifndef gdb
global bool gdb FALSE;
#else
#set gdb=FALSE
#endif //gdb
#ifndef debug
global bool debug FALSE;
#else
#set debug=FALSE
#endif //debug
#ifndef test
global bool test FALSE;
#else
#set test=FALSE
#endif //test
#ifndef verbose
global bool verbose FALSE;
#else
#set verbose=FALSE
#endif //verbose
#ifndef iteration_limit
global int32 iteration_limit 100;
#else
#set iteration_limit=100
#endif //iteration_limit
// workdir is set to /Users/aivanovalocal/gridlabd/mar2023/tools/autotest/test_create_meters
#ifndef dumpfile
#define dumpfile=gridlabd.json
#else
#set dumpfile=gridlabd.json
#endif //dumpfile
#ifndef savefile
#define savefile=notnodes-withloads.json
#else
#set savefile=notnodes-withloads.json
#endif //savefile
#ifndef dumpall
global bool dumpall FALSE;
#else
#set dumpall=FALSE
#endif //dumpall
#ifndef runchecks
global bool runchecks FALSE;
#else
#set runchecks=FALSE
#endif //runchecks
#ifndef threadcount
global int32 threadcount 1;
#else
#set threadcount=1
#endif //threadcount
#ifndef profiler
global bool profiler FALSE;
#else
#set profiler=FALSE
#endif //profiler
#ifndef pauseatexit
global bool pauseatexit FALSE;
#else
#set pauseatexit=FALSE
#endif //pauseatexit
#ifndef testoutputfile
#define testoutputfile=test.txt
#else
#set testoutputfile=test.txt
#endif //testoutputfile
#ifndef xml_encoding
global int32 xml_encoding 8;
#else
#set xml_encoding=8
#endif //xml_encoding
#ifndef clock
global timestamp clock "2023-01-01 00:00:00 PST";
#else
#set clock=2023-01-01 00:00:00 PST
#endif //clock
#ifndef starttime
global timestamp starttime "2023-01-01 00:00:00 PST";
#else
#set starttime=2023-01-01 00:00:00 PST
#endif //starttime
#ifndef stoptime
global timestamp stoptime "2023-01-02 00:00:00 PST";
#else
#set stoptime=2023-01-02 00:00:00 PST
#endif //stoptime
#ifndef double_format
global char32 double_format "%+lg";
#else
#set double_format=%+lg
#endif //double_format
#ifndef complex_format
global char256 complex_format "%+lg%+lg%c";
#else
#set complex_format=%+lg%+lg%c
#endif //complex_format
#ifndef complex_output_format
global enumeration complex_output_format DEFAULT;
#else
#set complex_output_format=DEFAULT
#endif //complex_output_format
#ifndef object_format
global char32 object_format "%s:%d";
#else
#set object_format=%s:%d
#endif //object_format
#ifndef object_scan
global char32 object_scan "%[^:]:%d";
#else
#set object_scan=%[^:]:%d
#endif //object_scan
#ifndef object_tree_balance
global bool object_tree_balance FALSE;
#else
#set object_tree_balance=FALSE
#endif //object_tree_balance
// kmlfile is set to 
#ifndef kmlhost
#define kmlhost=https://code.gridlabd.us/develop_fix_create_meters/runtime
#else
#set kmlhost=https://code.gridlabd.us/develop_fix_create_meters/runtime
#endif //kmlhost
// modelname is set to ../notnodes-withloads.glm
// execdir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/bin
#ifndef strictnames
global bool strictnames TRUE;
#else
#set strictnames=TRUE
#endif //strictnames
#ifndef website
#define website=http://www.gridlabd.org/
#else
#set website=http://www.gridlabd.org/
#endif //website
#ifndef urlbase
#define urlbase=http://www.gridlabd.org/
#else
#set urlbase=http://www.gridlabd.org/
#endif //urlbase
#ifndef randomstate
global int32 randomstate -281384347;
#else
#set randomstate=-281384347
#endif //randomstate
#ifndef randomseed
global int32 randomseed 1;
#else
#set randomseed=1
#endif //randomseed
// include is set to 
// trace is set to 
#ifndef gdb_window
global bool gdb_window FALSE;
#else
#set gdb_window=FALSE
#endif //gdb_window
#ifndef tmp
#define tmp=/Users/aivanovalocal/.gridlabd/tmp
#else
#set tmp=/Users/aivanovalocal/.gridlabd/tmp
#endif //tmp
#ifndef force_compile
global int32 force_compile 0;
#else
#set force_compile=0
#endif //force_compile
#ifndef nolocks
global bool nolocks FALSE;
#else
#set nolocks=FALSE
#endif //nolocks
#ifndef skipsafe
global bool skipsafe FALSE;
#else
#set skipsafe=FALSE
#endif //skipsafe
#ifndef dateformat
global enumeration dateformat ISO;
#else
#set dateformat=ISO
#endif //dateformat
#ifndef init_sequence
global enumeration init_sequence DEFERRED;
#else
#set init_sequence=DEFERRED
#endif //init_sequence
#ifndef minimum_timestep
global int32 minimum_timestep 1;
#else
#set minimum_timestep=1
#endif //minimum_timestep
// platform is set to MACOSX
#ifndef suppress_repeat_messages
global bool suppress_repeat_messages TRUE;
#else
#set suppress_repeat_messages=TRUE
#endif //suppress_repeat_messages
#ifndef maximum_synctime
global int32 maximum_synctime 60;
#else
#set maximum_synctime=60
#endif //maximum_synctime
#ifndef run_realtime
global bool run_realtime FALSE;
#else
#set run_realtime=FALSE
#endif //run_realtime
#ifndef enter_realtime
global timestamp enter_realtime "NEVER";
#else
#set enter_realtime=NEVER
#endif //enter_realtime
// realtime_metric is set to +0
#ifndef no_deprecate
global bool no_deprecate FALSE;
#else
#set no_deprecate=FALSE
#endif //no_deprecate
// streaming_io is set to FALSE
// compileonly is set to TRUE
#ifndef relax_naming_rules
global bool relax_naming_rules FALSE;
#else
#set relax_naming_rules=FALSE
#endif //relax_naming_rules
#ifndef browser
#define browser=safari
#else
#set browser=safari
#endif //browser
#ifndef server_portnum
global int32 server_portnum 0;
#else
#set server_portnum=0
#endif //server_portnum
#ifndef server_quit_on_close
global bool server_quit_on_close FALSE;
#else
#set server_quit_on_close=FALSE
#endif //server_quit_on_close
// client_allowed is set to 
#ifndef autoclean
global bool autoclean TRUE;
#else
#set autoclean=TRUE
#endif //autoclean
#ifndef technology_readiness_level
global enumeration technology_readiness_level UNKNOWN;
#else
#set technology_readiness_level=UNKNOWN
#endif //technology_readiness_level
#ifndef show_progress
global bool show_progress TRUE;
#else
#set show_progress=TRUE
#endif //show_progress
#ifndef checkpoint_type
global enumeration checkpoint_type NONE;
#else
#set checkpoint_type=NONE
#endif //checkpoint_type
// checkpoint_file is set to 
#ifndef checkpoint_seqnum
global int32 checkpoint_seqnum 0;
#else
#set checkpoint_seqnum=0
#endif //checkpoint_seqnum
#ifndef checkpoint_interval
global int32 checkpoint_interval 0;
#else
#set checkpoint_interval=0
#endif //checkpoint_interval
#ifndef checkpoint_keepall
global bool checkpoint_keepall FALSE;
#else
#set checkpoint_keepall=FALSE
#endif //checkpoint_keepall
#ifndef check_version
global bool check_version FALSE;
#else
#set check_version=FALSE
#endif //check_version
#ifndef random_number_generator
global enumeration random_number_generator RNG3;
#else
#set random_number_generator=RNG3
#endif //random_number_generator
#ifndef mainloop_state
global enumeration mainloop_state INIT;
#else
#set mainloop_state=INIT
#endif //mainloop_state
#ifndef pauseat
global timestamp pauseat "NEVER";
#else
#set pauseat=NEVER
#endif //pauseat
// infourl is set to http://docs.gridlabd.us/index.html?owner=slacgismo&project=gridlabd&search=
#ifndef hostname
#define hostname=localhost
#else
#set hostname=localhost
#endif //hostname
#ifndef hostaddr
global char32 hostaddr "127.0.0.1";
#else
#set hostaddr=127.0.0.1
#endif //hostaddr
#ifndef autostart_gui
global bool autostart_gui TRUE;
#else
#set autostart_gui=TRUE
#endif //autostart_gui
// master is set to 
#ifndef master_port
global int64 master_port 0;
#else
#set master_port=0
#endif //master_port
#ifndef multirun_mode
global enumeration multirun_mode STANDALONE;
#else
#set multirun_mode=STANDALONE
#endif //multirun_mode
#ifndef multirun_conn
global enumeration multirun_conn NONE;
#else
#set multirun_conn=NONE
#endif //multirun_conn
#ifndef signal_timeout
global int32 signal_timeout 5000;
#else
#set signal_timeout=5000
#endif //signal_timeout
#ifndef slave_port
global int16 slave_port 6267;
#else
#set slave_port=6267
#endif //slave_port
#ifndef slave_id
global int64 slave_id 0;
#else
#set slave_id=0
#endif //slave_id
// return_code is set to 0
// exit_code is set to 0
#ifndef module_compiler_flags
global set module_compiler_flags NONE;
#else
#set module_compiler_flags=NONE
#endif //module_compiler_flags
// init_max_defer is set to 64
#ifndef mt_analysis
global bool mt_analysis FALSE;
#else
#set mt_analysis=FALSE
#endif //mt_analysis
#ifndef inline_block_size
global int32 inline_block_size 1048576;
#else
#set inline_block_size=1048576
#endif //inline_block_size
#ifndef validate
global set validate TSTD|RALL;
#else
#set validate=TSTD|RALL
#endif //validate
#ifndef sanitize
global set sanitize NAMES|POSITIONS;
#else
#set sanitize=NAMES|POSITIONS
#endif //sanitize
#ifndef sanitize_prefix
global char8 sanitize_prefix "GLD_";
#else
#set sanitize_prefix=GLD_
#endif //sanitize_prefix
#ifndef sanitize_index
#define sanitize_index=.txt
#else
#set sanitize_index=.txt
#endif //sanitize_index
// sanitize_offset is set to 
#ifndef simulation_mode
global enumeration simulation_mode INIT;
#else
#set simulation_mode=INIT
#endif //simulation_mode
#ifndef deltamode_allowed
global bool deltamode_allowed FALSE;
#else
#set deltamode_allowed=FALSE
#endif //deltamode_allowed
#ifndef deltamode_timestep
global int32 deltamode_timestep 10000000;
#else
#set deltamode_timestep=10000000
#endif //deltamode_timestep
#ifndef deltamode_maximumtime
global int64 deltamode_maximumtime 3600000000000;
#else
#set deltamode_maximumtime=3600000000000
#endif //deltamode_maximumtime
#ifndef deltaclock
global int64 deltaclock 0;
#else
#set deltaclock=0
#endif //deltaclock
#ifndef delta_current_clock
global double delta_current_clock +0;
#else
#set delta_current_clock=+0
#endif //delta_current_clock
// deltamode_updateorder is set to 
#ifndef deltamode_iteration_limit
global int32 deltamode_iteration_limit 10;
#else
#set deltamode_iteration_limit=10
#endif //deltamode_iteration_limit
#ifndef deltamode_forced_extra_timesteps
global int32 deltamode_forced_extra_timesteps 0;
#else
#set deltamode_forced_extra_timesteps=0
#endif //deltamode_forced_extra_timesteps
#ifndef deltamode_forced_always
global bool deltamode_forced_always FALSE;
#else
#set deltamode_forced_always=FALSE
#endif //deltamode_forced_always
#ifndef run_powerworld
global bool run_powerworld FALSE;
#else
#set run_powerworld=FALSE
#endif //run_powerworld
#ifndef bigranks
global bool bigranks TRUE;
#else
#set bigranks=TRUE
#endif //bigranks
// exename is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/bin/gridlabd.bin
#ifndef wget_options
#define wget_options=maxsize:100MB;update:newer
#else
#set wget_options=maxsize:100MB;update:newer
#endif //wget_options
#ifndef curl_options
#define curl_options=maxsize:100MB;update:newer
#else
#set curl_options=maxsize:100MB;update:newer
#endif //curl_options
#ifndef svnroot
#define svnroot=http://gridlab-d.svn.sourceforge.net/svnroot/gridlab-d
#else
#set svnroot=http://gridlab-d.svn.sourceforge.net/svnroot/gridlab-d
#endif //svnroot
#ifndef github
#define github=https://github.com/gridlab-d
#else
#set github=https://github.com/gridlab-d
#endif //github
#ifndef gitraw
#define gitraw=https://raw.githubusercontent.com/gridlab-d
#else
#set gitraw=https://raw.githubusercontent.com/gridlab-d
#endif //gitraw
#ifndef allow_reinclude
global bool allow_reinclude FALSE;
#else
#set allow_reinclude=FALSE
#endif //allow_reinclude
#ifndef output_message_context
global set output_message_context ALL;
#else
#set output_message_context=ALL
#endif //output_message_context
#ifndef permissive_access
global int32 permissive_access 0;
#else
#set permissive_access=0
#endif //permissive_access
#ifndef relax_undefined_if
global bool relax_undefined_if FALSE;
#else
#set relax_undefined_if=FALSE
#endif //relax_undefined_if
#ifndef literal_if
global bool literal_if TRUE;
#else
#set literal_if=TRUE
#endif //literal_if
#ifndef validto_context
global enumeration validto_context 1414746112;
#else
#set validto_context=1414746112
#endif //validto_context
#ifndef daemon_configfile
#define daemon_configfile=gridlabd.cnf
#else
#set daemon_configfile=gridlabd.cnf
#endif //daemon_configfile
// timezone_locale is set to PST8PDT
#ifndef glm_save_options
global set glm_save_options MINIMAL;
#else
#set glm_save_options=MINIMAL
#endif //glm_save_options
#ifndef filesave_options
global set filesave_options ALL;
#else
#set filesave_options=ALL
#endif //filesave_options
#ifndef ignore_errors
global bool ignore_errors FALSE;
#else
#set ignore_errors=FALSE
#endif //ignore_errors
#ifndef keep_progress
global bool keep_progress FALSE;
#else
#set keep_progress=FALSE
#endif //keep_progress
#ifndef allow_variant_aggregates
global bool allow_variant_aggregates FALSE;
#else
#set allow_variant_aggregates=FALSE
#endif //allow_variant_aggregates
// progress is set to +0
#ifndef server_keepalive
global bool server_keepalive FALSE;
#else
#set server_keepalive=FALSE
#endif //server_keepalive
#ifndef pythonpath
#define pythonpath=(null):.:/usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/share/gridlabd:/usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/lib/gridlabd/python3.10/site-packages
#else
#set pythonpath=(null):.:/usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/share/gridlabd:/usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/lib/gridlabd/python3.10/site-packages
#endif //pythonpath
// pythonexec is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/bin/python3
// datadir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/share/gridlabd
// bindir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/bin
// vardir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/var/gridlabd
// libdir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/lib/gridlabd
// incdir is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/include
// logfile is set to /tmp/gridlabd-log
// pidfile_dir is set to /tmp/gridlabd-pid
// configpath is set to /usr/local/opt/gridlabd/4.3.1-230512-develop_fix_create_meters-darwin_22-x86_64/share/gridlabd/solver_py.conf
#ifndef json_complex_format
global set json_complex_format STRING;
#else
#set json_complex_format=STRING
#endif //json_complex_format
#ifndef rusage_file
#define rusage_file=gridlabd-rusage.csv
#else
#set rusage_file=gridlabd-rusage.csv
#endif //rusage_file
#ifndef rusage_rate
global int64 rusage_rate 0;
#else
#set rusage_rate=0
#endif //rusage_rate
#ifndef rusage
#define rusage={}
#else
#set rusage={}
#endif //rusage
#ifndef echo
global bool echo FALSE;
#else
#set echo=FALSE
#endif //echo
// filename is set to ../notnodes-withloads.glm
#ifndef country
global char8 country "US";
#else
#set country=US
#endif //country
#ifndef region
global char32 region "CA";
#else
#set region=CA
#endif //region
#ifndef organization
global char32 organization "SLAC";
#else
#set organization=SLAC
#endif //organization
// profile_output_format is set to 
#ifndef maximum_runtime
global int64 maximum_runtime 0;
#else
#set maximum_runtime=0
#endif //maximum_runtime
// powerflow::message_flags is set to 
// powerflow::show_matrix_values is set to FALSE
// powerflow::primary_voltage_ratio is set to +60 pu
// powerflow::nominal_frequency is set to +60 Hz
// powerflow::require_voltage_control is set to FALSE
// powerflow::geographic_degree is set to +0
// powerflow::fault_impedance is set to +1e-06+0j Ohm
// powerflow::ground_impedance is set to +1e-06+0j Ohm
// powerflow::warning_underfrequency is set to +55 Hz
// powerflow::warning_overfrequency is set to +65 Hz
// powerflow::warning_undervoltage is set to +0.8 V
// powerflow::warning_overvoltage is set to +1.2 V
// powerflow::warning_voltageangle is set to +2
// powerflow::maximum_voltage_error is set to +1e-06 V
// powerflow::solver_method is set to NR
// powerflow::NR_matrix_file is set to 
// powerflow::NR_matrix_output_interval is set to NEVER
// powerflow::NR_matrix_output_references is set to FALSE
// powerflow::NR_matrix_output_rhs is set to FALSE
// powerflow::NR_island_failure_handled is set to FALSE
// powerflow::line_capacitance is set to FALSE
// powerflow::line_limits is set to TRUE
// powerflow::lu_solver is set to 
// powerflow::NR_iteration_limit is set to 500
// powerflow::NR_deltamode_iteration_limit is set to 10
// powerflow::NR_superLU_procs is set to 1
// powerflow::default_maximum_voltage_error is set to +1e-06 pu
// powerflow::default_maximum_power_error is set to +0.0001 pu
// powerflow::NR_admit_change is set to TRUE
// powerflow::enable_subsecond_models is set to FALSE
// powerflow::all_powerflow_delta is set to FALSE
// powerflow::deltamode_timestep is set to +1e+07 ns
// powerflow::current_frequency is set to +60 Hz
// powerflow::master_frequency_update is set to FALSE
// powerflow::enable_frequency_dependence is set to FALSE
// powerflow::default_resistance is set to +0.0001 Ohm
// powerflow::enable_inrush is set to FALSE
// powerflow::low_voltage_impedance_level is set to +0.7 pu
// powerflow::enable_mesh_fault_current is set to FALSE
// powerflow::convergence_error_handling is set to FATAL
// powerflow::solver_profile_enable is set to FALSE
// powerflow::solver_profile_filename is set to solver_nr_profile.txt
// powerflow::solver_profile_headers_included is set to TRUE
// powerflow::solver_headers is set to timestamp,duration[microsec],iteration,bus_count,branch_count,error
// powerflow::solver_profile_csv is set to FALSE
// powerflow::solver_py_config is set to /usr/local/opt/gridlabd/var/gridlabd/solver_py.conf
// powerflow::solver_dump_enable is set to FALSE
// powerflow::violation_record is set to 
// powerflow::violation_count is set to 0
// powerflow::violation_active is set to 0
// powerflow::violation_watchset is set to ALL
// powerflow::voltage_violation_threshold is set to +0.05 pu
// powerflow::undervoltage_violation_threshold is set to +0 pu
// powerflow::overvoltage_violation_threshold is set to +0 pu
// powerflow::voltage_fluctuation_threshold is set to +0.03 pu
// powerflow::DER_violation_test is set to ANY
// powerflow::default_continuous_rating is set to +1000 A
// powerflow::default_emergency_rating is set to +2000 A
// powerflow::default_violation_rating is set to +0 A
// powerflow::market_price_name is set to current_market.clearing_price
// powerflow::repair_time is set to +24 h
// powerflow::wind_speed_name is set to wind_speed
// powerflow::wind_dir_name is set to wind_dir
// powerflow::wind_gust_name is set to wind_gust
// powerflow::stop_on_pole_failure is set to FALSE
// powerflow::climate_impact_zone is set to NONE
// powerflow::building_defaults is set to building_defaults.csv
// powerflow::building_loadshapes is set to building_loadshapes.csv
// powerflow::building_occupancy is set to building_occupancy.csv
// powerflow::inverter_settings is set to inverter_settings.csv
// powerflow::NAICS_datafile is set to naics_data_file.csv
// powerflow::ground_temperature is set to +25 degC
// powerflow::warning_cable_temperature is set to +80 degC
// powerflow::alert_cable_temperature is set to +90 degC
// powerflow::ductbank_configuration_file is set to ductbank_configurations.csv
// powerflow::air_effective_conductivity is set to +0.2 W/K*m
// assert::message_flags is set to 
// tape::gnuplot_path is set to /usr/bin/gnuplot
// tape::flush_interval is set to 0
// tape::csv_data_only is set to 0
// tape::csv_header_type is set to FULL
// tape::csv_keep_clean is set to 0
// tape::delta_mode_needed is set to NEVER

// CLASSES// SCHEDULES



// OBJECTS
object substation
{
	name "main_bus";
	rng_state "8935";
	guid "2929E2F9B2A3365F49200808176538A8";
	zero_sequence_voltage "0+0j V";
	positive_sequence_voltage "0+0j V";
	negative_sequence_voltage "0+0j V";
	base_power "100 VA";
	power_convergence_value "1 VA";
	reference_phase "PHASE_A";
	transmission_level_constant_power_load "0+0j VA";
	transmission_level_constant_current_load "0+0j A";
	transmission_level_constant_impedance_load "0+0j Ohm";
	distribution_load "0+0j VA";
	distribution_power_A "0+0j VA";
	distribution_power_B "0+0j VA";
	distribution_power_C "0+0j VA";
	distribution_voltage_A "2401.78+0j V";
	distribution_voltage_B "-1200.89-2080j V";
	distribution_voltage_C "-1200.89+2080j V";
	distribution_voltage_AB "0+0j V";
	distribution_voltage_BC "0+0j V";
	distribution_voltage_CA "0+0j V";
	distribution_current_A "0+0j A";
	distribution_current_B "0+0j A";
	distribution_current_C "0+0j A";
	distribution_real_energy "0 Wh";
	bustype "SWING";
	busflags "HASSOURCE";
	maximum_voltage_error "0.00240178 V";
	voltage_A "2401.78+0j V";
	voltage_B "-1200.89-2080j V";
	voltage_C "-1200.89+2080j V";
	voltage_AB "0+0j V";
	voltage_BC "0+0j V";
	voltage_CA "0+0j V";
	mean_repair_time "0 s";
	frequency_measure_type "NONE";
	sfm_Tf "0.01 s";
	pll_Kp "10 pu";
	pll_Ki "100 pu";
	measured_angle_A "0 rad";
	measured_frequency_A "60 Hz";
	measured_angle_B "0 rad";
	measured_frequency_B "60 Hz";
	measured_angle_C "0 rad";
	measured_frequency_C "60 Hz";
	measured_frequency "60 Hz";
	service_status "IN_SERVICE";
	service_status_double "-1";
	previous_uptime "-1 min";
	current_uptime "-1 min";
	Norton_dynamic "FALSE";
	generator_dynamic "FALSE";
	reset_disabled_island_state "FALSE";
	GFA_enable "FALSE";
	GFA_freq_low_trip "59.5 Hz";
	GFA_freq_high_trip "60.5 Hz";
	GFA_volt_low_trip "0.8 pu";
	GFA_volt_high_trip "1.2 pu";
	GFA_reconnect_time "300 s";
	GFA_freq_disconnect_time "0.2 s";
	GFA_volt_disconnect_time "0.2 s";
	GFA_status "TRUE";
	GFA_trip_method "NONE";
	voltage_violation_threshold "0.05 pu";
	undervoltage_violation_threshold "0 pu";
	overvoltage_violation_threshold "0 pu";
	voltage_fluctuation_threshold "0.03 pu";
	DER_value "0+0j VA";
	phases "ABCN";
	nominal_voltage "2401.78 V";
	violation_detected "NONE";
}
object load
{
	name "load1";
	parent "main_bus";
	rng_state "20520";
	guid "4571FB76CFDE325447A5BA9D899865DB";
	load_class "U";
	constant_power_A "160000+110000j VA";
	constant_power_B "120000+90000j VA";
	constant_power_C "120000+90000j VA";
	constant_power_A_real "160000 W";
	constant_power_B_real "120000 W";
	constant_power_C_real "120000 W";
	constant_power_A_reac "110000 VAr";
	constant_power_B_reac "90000 VAr";
	constant_power_C_reac "90000 VAr";
	constant_current_A "0+0j A";
	constant_current_B "0+0j A";
	constant_current_C "0+0j A";
	constant_current_A_real "0 A";
	constant_current_B_real "0 A";
	constant_current_C_real "0 A";
	constant_current_A_reac "0 A";
	constant_current_B_reac "0 A";
	constant_current_C_reac "0 A";
	constant_impedance_A "0+0j Ohm";
	constant_impedance_B "0+0j Ohm";
	constant_impedance_C "0+0j Ohm";
	constant_impedance_A_real "0 Ohm";
	constant_impedance_B_real "0 Ohm";
	constant_impedance_C_real "0 Ohm";
	constant_impedance_A_reac "0 Ohm";
	constant_impedance_B_reac "0 Ohm";
	constant_impedance_C_reac "0 Ohm";
	constant_power_AN "0+0j VA";
	constant_power_BN "0+0j VA";
	constant_power_CN "0+0j VA";
	constant_power_AN_real "0 W";
	constant_power_BN_real "0 W";
	constant_power_CN_real "0 W";
	constant_power_AN_reac "0 VAr";
	constant_power_BN_reac "0 VAr";
	constant_power_CN_reac "0 VAr";
	constant_current_AN "0+0j A";
	constant_current_BN "0+0j A";
	constant_current_CN "0+0j A";
	constant_current_AN_real "0 A";
	constant_current_BN_real "0 A";
	constant_current_CN_real "0 A";
	constant_current_AN_reac "0 A";
	constant_current_BN_reac "0 A";
	constant_current_CN_reac "0 A";
	constant_impedance_AN "0+0j Ohm";
	constant_impedance_BN "0+0j Ohm";
	constant_impedance_CN "0+0j Ohm";
	constant_impedance_AN_real "0 Ohm";
	constant_impedance_BN_real "0 Ohm";
	constant_impedance_CN_real "0 Ohm";
	constant_impedance_AN_reac "0 Ohm";
	constant_impedance_BN_reac "0 Ohm";
	constant_impedance_CN_reac "0 Ohm";
	constant_power_AB "0+0j VA";
	constant_power_BC "0+0j VA";
	constant_power_CA "0+0j VA";
	constant_power_AB_real "0 W";
	constant_power_BC_real "0 W";
	constant_power_CA_real "0 W";
	constant_power_AB_reac "0 VAr";
	constant_power_BC_reac "0 VAr";
	constant_power_CA_reac "0 VAr";
	constant_current_AB "0+0j A";
	constant_current_BC "0+0j A";
	constant_current_CA "0+0j A";
	constant_current_AB_real "0 A";
	constant_current_BC_real "0 A";
	constant_current_CA_real "0 A";
	constant_current_AB_reac "0 A";
	constant_current_BC_reac "0 A";
	constant_current_CA_reac "0 A";
	constant_impedance_AB "0+0j Ohm";
	constant_impedance_BC "0+0j Ohm";
	constant_impedance_CA "0+0j Ohm";
	constant_impedance_AB_real "0 Ohm";
	constant_impedance_BC_real "0 Ohm";
	constant_impedance_CA_real "0 Ohm";
	constant_impedance_AB_reac "0 Ohm";
	constant_impedance_BC_reac "0 Ohm";
	constant_impedance_CA_reac "0 Ohm";
	measured_voltage_A "0+0j V";
	measured_voltage_B "0+0j V";
	measured_voltage_C "0+0j V";
	measured_voltage_AB "0+0j V";
	measured_voltage_BC "0+0j V";
	measured_voltage_CA "0+0j V";
	phase_loss_protection "FALSE";
	base_power_A "0 VA";
	base_power_B "0 VA";
	base_power_C "0 VA";
	power_pf_A "1 pu";
	current_pf_A "1 pu";
	impedance_pf_A "1 pu";
	power_pf_B "1 pu";
	current_pf_B "1 pu";
	impedance_pf_B "1 pu";
	power_pf_C "1 pu";
	current_pf_C "1 pu";
	impedance_pf_C "1 pu";
	power_fraction_A "0 pu";
	current_fraction_A "0 pu";
	impedance_fraction_A "0 pu";
	power_fraction_B "0 pu";
	current_fraction_B "0 pu";
	impedance_fraction_B "0 pu";
	power_fraction_C "0 pu";
	current_fraction_C "0 pu";
	impedance_fraction_C "0 pu";
	bustype "PQ";
	busflags "HASSOURCE";
	maximum_voltage_error "0.00240178 V";
	voltage_A "2401.78+0j V";
	voltage_B "-1200.89-2080j V";
	voltage_C "-1200.89+2080j V";
	voltage_AB "0+0j V";
	voltage_BC "0+0j V";
	voltage_CA "0+0j V";
	mean_repair_time "0 s";
	frequency_measure_type "NONE";
	sfm_Tf "0.01 s";
	pll_Kp "10 pu";
	pll_Ki "100 pu";
	measured_angle_A "0 rad";
	measured_frequency_A "60 Hz";
	measured_angle_B "0 rad";
	measured_frequency_B "60 Hz";
	measured_angle_C "0 rad";
	measured_frequency_C "60 Hz";
	measured_frequency "60 Hz";
	service_status "IN_SERVICE";
	service_status_double "-1";
	previous_uptime "-1 min";
	current_uptime "-1 min";
	Norton_dynamic "FALSE";
	generator_dynamic "FALSE";
	reset_disabled_island_state "FALSE";
	GFA_enable "FALSE";
	GFA_freq_low_trip "59.5 Hz";
	GFA_freq_high_trip "60.5 Hz";
	GFA_volt_low_trip "0.8 pu";
	GFA_volt_high_trip "1.2 pu";
	GFA_reconnect_time "300 s";
	GFA_freq_disconnect_time "0.2 s";
	GFA_volt_disconnect_time "0.2 s";
	GFA_status "TRUE";
	GFA_trip_method "NONE";
	topological_parent "main_bus";
	voltage_violation_threshold "0.05 pu";
	undervoltage_violation_threshold "0 pu";
	overvoltage_violation_threshold "0 pu";
	voltage_fluctuation_threshold "0.03 pu";
	DER_value "0+0j VA";
	phases "ABCN";
	nominal_voltage "2401.78 V";
	violation_detected "NONE";
}
object complex_assert
{
	name "complex_assert:2";
	parent "load1";
	rng_state "5006";
	guid "FCC7BFEEAC464371C0851B7083D1D8";
	status "ASSERT_TRUE";
	once "ONCE_FALSE";
	operation "FULL";
	value "160000+110000j";
	within "1";
	target "constant_power_A";
}
object complex_assert
{
	name "complex_assert:3";
	parent "load1";
	rng_state "29890";
	guid "74D7F9CFB7FFEC8B63B38E1D8338AB3F";
	status "ASSERT_TRUE";
	once "ONCE_FALSE";
	operation "FULL";
	value "120000+90000j";
	within "1";
	target "constant_power_B";
}
object complex_assert
{
	name "complex_assert:4";
	parent "load1";
	rng_state "28474";
	guid "30955A14F36EFDE6314A5F4A4CC6334C";
	status "ASSERT_TRUE";
	once "ONCE_FALSE";
	operation "FULL";
	value "120000+90000j";
	within "1";
	target "constant_power_C";
}
