// test the geodata elevation dataset using a known location elevation

#ifexist ../path_example.csv
#define DIR=..
#endif

// test a single location
#setenv LOC=37.4150,-122.2056
#define ANS=87.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC -f RAW}
#if ${RES} != ${ANS}
    #error "geodata merge -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a straight line between two locations at a specified resolution
#setenv LOC=37.4150,-122.2056 37.3880,-122.2884 -r 1000
#define ANS=87.0 93.0 178.0 115.0 106.0 303.0 409.0 602.0 634.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path
#setenv LOC=${DIR:-.}/path_example.csv
#define ANS=88 100 111 110 98 91 77 91 80 79 96 82 103 129 109 108 115 127 123 124 117 110 106 116 166 267 285 331 352 340 444 448 505 578 615 642 634
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path at a specified resolution
#setenv LOC=${DIR:-.}/path_example.csv -r 500
#define ANS=88 100 111 110 98 91 77 91 80 79 96 82 103 129 109 108 115 127 123 124 117 110 106 116 166 267 285 291 331 352 340 436 444 448 505 578 615 642 547 634
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif
