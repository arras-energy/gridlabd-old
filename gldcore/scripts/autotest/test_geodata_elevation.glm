// test the geodata elevation dataset using a known location elevation

#ifexist ../path_example.csv
#define DIR=..
#endif

// test a single location
#setenv LOC=37.4150,-122.2056 -f RAW:elevation
#define ANS=87.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC --recordsep ' '}
#if ${RES} != ${ANS}
    #error "geodata merge -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a straight line between two locations at a specified resolution
#setenv LOC=37.4150,-122.2056 37.3880,-122.2884 -r 1000 -f RAW:elevation
#define ANS=87.0 93.0 178.0 115.0 106.0 303.0 409.0 602.0 634.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC --recordsep ' '}
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path
#setenv LOC=${DIR:-.}/path_example.csv -f RAW:elevation
#define ANS=88.0 100.0 112.0 111.0 98.0 92.0 79.0 90.0 78.0 80.0 92.0 81.0 103.0 126.0 121.0 106.0 112.0 125.0 126.0 123.0 118.0 106.0 106.0 117.0 172.0 264.0 286.0 322.0 349.0 326.0 443.0 448.0 501.0 573.0 610.0 641.0 632.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC --recordsep ' '}
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path at a specified resolution
#setenv LOC=${DIR:-.}/path_example.csv -r 500 -f RAW:elevation
#define ANS=88.0 100.0 112.0 111.0 98.0 92.0 79.0 90.0 78.0 80.0 92.0 81.0 103.0 126.0 121.0 106.0 112.0 125.0 126.0 123.0 118.0 106.0 106.0 117.0 172.0 264.0 286.0 112.0 322.0 349.0 326.0 90.0 443.0 448.0 501.0 573.0 610.0 640.0 67.0 632.0
#define RES=${SHELL gridlabd geodata merge -D elevation $LOC --recordsep ' '}
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif
