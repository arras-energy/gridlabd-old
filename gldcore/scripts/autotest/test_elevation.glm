// test the geodata elevation dataset using a known location elevation

// test a single location
#setenv LOC=location 37.4150,-122.2056
#define ANS=87
#define RES=${SHELL gridlabd geodata -D elevation $LOC -f RAW}
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a straight line between two locations at a specified resolution
#setenv LOC=location 37.4150,-122.2056 37.3880,-122.2884 -r 1000
#define ANS=87 93 178 115 106 303 409 602 634
#define RES=${SHELL gridlabd geodata -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path
#setenv LOC=path path_example.csv -f RAW
#define ANS=88 100 111 110 98 91 77 91 80 79 96 82 103 129 109 108 115 124 127 123 117 110 106 116 166 267 285 331 352 340 444 448 505 578 615 642 634
#define RES=${SHELL gridlabd geodata -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif

// test a path at a specified resolution
#setenv LOC=path path_example.csv -f RAW -r 500
#define ANS=634 547 615 642 578 505 448 444 436 340 352 331 291 285 267 166 116 106 110 117 123 127 124 115 108 109 129 103 82 96 79 80 91 77 91 98 110 111 100 88
#define RES=${SHELL gridlabd geodata -D elevation $LOC -f RAW }
#if ${RES} != ${ANS}
    #error "geodata -D elevation ${LOC}" is incorrect: expected ${ANS} meters but got ${RES} meters instead
#endif
