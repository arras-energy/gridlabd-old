// test_random.glm
//
// The first time this test is run (no randomseed.glm) the result
// should be truly random, i.e., determine the entropy source
//
// The second time this test is run (using randomseed.glm) the result 
// should be the same as the first time, except for GUID, which cannot 
// be forced to repeat.
//
// Three outputs are generated by this test
//
// randomseed.glm	This is the initial seed for the next run
//
// randomstate.csv	This is a record of the global random state during the run
//
// test_random.csv	This is a record of the test object random state during the run
//
#ifexist randomseed.glm
#include "randomseed.glm"
#else
// cause randomseed to be saveable, even though it is 0, i.e., the entropy source
#set randomseed=0
#endif

#set suppress_repeat_messages=0

script export randomseed;
script export randomstate;
script export clock;
script export NRAND;
script export URAND;
script export GUID;
script on_init ../save_randomseed;
//script on_sync ../save_randomstate;

clock {
	starttime "2010-01-01 00:00:00";
	stoptime "2010-01-01 01:00:00";
}

module tape {
	csv_data_only 1;
}

class test {
	randomvar value;
}

object test {
	value "type: normal(0,1); refresh: 10min";
	object recorder {
		property value;
		interval 300;
		limit 10;
#ifexist randomseed.glm
		file test_random_1.csv;
#else
		file test_random_0.csv;
#endif
	};
}

#ifexist randomseed.glm
script on_term ../diff_randomseed;
#else
script on_term gridlabd test_random.glm;
#endif
