// test_double_array.glm
//
// Test runtime implementation of double_array operations
//
// A = [ 0 1 ; -0.16 -1 ]
// B = [ 1 ; 1]
// C = [ 1 0 ]
// D = [ 0 ]
//
// Test 1: X(0) = [ 0 ; 0 ], U(k) = [ 1 ] for k>=0
// Test 2: X(0) = [ 5 ; 0 ], U(k) = [ 1 ] for k>=0
// Test 3: X(0) = [ 0 ; 1 ], U(k) = [ 1 ] for k>=0
//

#print ${workdir}
#set tmp=.
#setenv GRIDLABD=../../../core
//#set include=c:/gridlabd/ticket/910/core
// these are used to allow debugging of runtime class in MSVC
//#setenv MSVC=c:/program files/microsoft visual studio 8
//#setenv MSVC86=c:/program files (x86)/microsoft visual studio 8
//#define use_msvc=TRUE
//#define force_compile=1
//#setenv path=${MSVC}/Common7/IDE;${MSVC}/VC/bin
//#setenv include=${MSVC86}/VC/include;${MSVC86}/VC/include/sys;${MSVC}/VC/include;${MSVC}/VC/include/sys
//#setenv lib=${SystemRoot}/system32;${MSVC}/VC/lib;${MSVC}/VC/Lib/amd64;${MSVC86}/VC/PlatformSDK/Lib/amd64;${MSVC86}/VC/lib;${MSVC86}/VC/lib/amd64;${MSVC86}/VC/PlatformSDK/Lib

module assert;
module tape;

clock {
	timezone "US/WA/Seattle";
	starttime '2000-01-01 00:00:00 PST';
	stoptime '2000-01-01 00:01:00 PST';
}

class test {
	double input;
	double output;
	double a11;
	double a21;
	double x1;
	double x2;
	double_array X;
	double_array A;
	double_array B;
	double_array U;
	double_array Y;
	double_array C;
	double_array D;
	intrinsic sync(TIMESTAMP t0, TIMESTAMP t1)
	{
		Y = C*X + D*U;
		return TS_NEVER;
	};
	intrinsic commit(TIMESTAMP t0, TIMESTAMP t1)
	{
		X += A*X + B*U;
		return TS_NEVER;
	};
}

object test {
	a11 0.0;
	a21 -0.16;
	x1 0.0;
	x2 0.0;
	input 1;
	U "input";
	Y "output";
	X "x1;x2";
	A "a11 1;a21 -1";
	B "1;1";
	C "1 0";
	D "0";
	object assert {
		target output;
		relation inside;
		lower 0.0;
		upper 12.5;
	};
	object recorder {
		property input,output,x1,x2;
		file test_double_array_1.csv;
		interval 1;
	};
}	

object test {
	a11 0.0;
	a21 -0.16;
	x1 5.0;
	x2 0.0;
	input 1;
	U "input";
	Y "output";
	X "x1;x2";
	A "a11 1;a21 -1";
	B "1;1";
	C "1 0";
	D "0";
	object assert {
		target output;
		relation inside;
		lower 0.0;
		upper 12.5;
	};
	object recorder {
		property input,output,x1,x2;
		file test_double_array_2.csv;
		interval 1;
	};
}	

object test {
	a11 0.0;
	a21 -0.16;
	x1 0.0;
	x2 1.0;
	input 1;
	U "input";
	Y "output";
	X "x1;x2";
	A "a11 1;a21 -1";
	B "1;1";
	C "1 0";
	D "0";
	object assert {
		target output;
		relation inside;
		lower 0.0;
		upper 12.5;
	};
	object recorder {
		property input,output,x1,x2;
		file test_double_array_3.csv;
		interval 1;
	};
}	
