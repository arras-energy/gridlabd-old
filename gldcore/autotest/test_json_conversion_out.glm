// JSON to GLM Converter Output
 // CLOCK
clock {
	timezone EST5EDT;
	starttime "2020-01-01 00:00:00 EST";
	stoptime "2020-01-02 00:00:00 EST";
}
 // MODULES
module climate{
	message_flags DEBUG|VERBOSE;
}
module residential{
	message_flags DEBUG|VERBOSE;
	default_line_voltage +240+0d V;
	default_line_current +0+0j A;
	default_outdoor_temperature +74 degF;
	default_humidity +75 %;
	default_solar +0 Btu/sf;
	default_etp_iterations 100;
	ANSI_voltage_check TRUE;
	enable_subsecond_models FALSE;
	deltamode_timestep +1e+07 ns;
	all_house_delta FALSE;
	implicit_enduses DRYER|CLOTHESWASHER|WATERHEATER|RANGE|REFRIGERATOR|FREEZER|MICROWAVE|DISHWASHER|PLUGS|LIGHTS;
	implicit_enduse_source ELCAP1990;
	house_low_temperature_warning +55 degF;
	house_high_temperature_warning +95 degF;
	thermostat_control_warning +4.94066e-324;
	system_dwell_time +1 s;
	aux_cutin_temperature +10 degF;
	paneldump_filename paneldump.csv;
	paneldump_interval 0;
	paneldump_resolution +0;
}
module tape{
	gnuplot_path /usr/bin/gnuplot;
	flush_interval 0;
	csv_data_only 1;
	csv_keep_clean 0;
	delta_mode_needed NEVER;
}
 // GLOBALS
// version.major is set to 4
// version.minor is set to 2
// version.patch is set to 1
// version.build is set to 200327
// version.branch is set to develop_fix_json_conversion
// version is set to 4.2.1-200327-develop_fix_json_conversion
// command_line is set to /usr/local/opt/gridlabd/4.2.1-200327-develop_fix_json_conversion/bin/gridlabd.bin -D SECONDRUN test_json_conversion.glm -o test_json_conversion_out.json
#ifndef environment
#define environment = "batch"
#else
#set environment="batch"
#endif //environment
#ifndef quiet
global bool quiet FALSE;
#else
#set quiet=FALSE
#endif //quiet
#ifndef warn
global bool warn TRUE;
#else
#set warn=TRUE
#endif //warn
#ifndef debugger
global bool debugger FALSE;
#else
#set debugger=FALSE
#endif //debugger
#ifndef gdb
global bool gdb FALSE;
#else
#set gdb=FALSE
#endif //gdb
#ifndef debug
global bool debug FALSE;
#else
#set debug=FALSE
#endif //debug
#ifndef test
global bool test FALSE;
#else
#set test=FALSE
#endif //test
#ifndef verbose
global bool verbose FALSE;
#else
#set verbose=FALSE
#endif //verbose
#ifndef iteration_limit
global int32 iteration_limit 100;
#else
#set iteration_limit=100
#endif //iteration_limit
// workdir is set to /Users/david/GitHub/gridlabd/gldcore/autotest
#ifndef dumpfile
#define dumpfile = "gridlabd.json"
#else
#set dumpfile="gridlabd.json"
#endif //dumpfile
#ifndef savefile
#define savefile = "test_json_conversion_out.json"
#else
#set savefile="test_json_conversion_out.json"
#endif //savefile
#ifndef dumpall
global bool dumpall FALSE;
#else
#set dumpall=FALSE
#endif //dumpall
#ifndef runchecks
global bool runchecks FALSE;
#else
#set runchecks=FALSE
#endif //runchecks
#ifndef threadcount
global int32 threadcount 1;
#else
#set threadcount=1
#endif //threadcount
#ifndef profiler
global bool profiler FALSE;
#else
#set profiler=FALSE
#endif //profiler
#ifndef pauseatexit
global bool pauseatexit FALSE;
#else
#set pauseatexit=FALSE
#endif //pauseatexit
#ifndef testoutputfile
#define testoutputfile = "test.txt"
#else
#set testoutputfile="test.txt"
#endif //testoutputfile
#ifndef xml_encoding
global int32 xml_encoding 8;
#else
#set xml_encoding=8
#endif //xml_encoding
#ifndef clock
global timestamp clock "1999-12-31 19:00:00 EST";
#else
#set clock="1999-12-31 19:00:00 EST"
#endif //clock
#ifndef starttime
global timestamp starttime "2020-01-01 00:00:00 EST";
#else
#set starttime="2020-01-01 00:00:00 EST"
#endif //starttime
#ifndef stoptime
global timestamp stoptime "2020-01-02 00:00:00 EST";
#else
#set stoptime="2020-01-02 00:00:00 EST"
#endif //stoptime
#ifndef double_format
global char32 double_format "%+lg";
#else
#set double_format="%+lg"
#endif //double_format
#ifndef complex_format
global char256 complex_format "%+lg%+lg%c";
#else
#set complex_format="%+lg%+lg%c"
#endif //complex_format
#ifndef object_format
global char32 object_format "%s:%d";
#else
#set object_format="%s:%d"
#endif //object_format
#ifndef object_scan
global char32 object_scan "%[^:]:%d";
#else
#set object_scan="%[^:]:%d"
#endif //object_scan
#ifndef object_tree_balance
global bool object_tree_balance FALSE;
#else
#set object_tree_balance=FALSE
#endif //object_tree_balance
// kmlfile is set to 
#ifndef kmlhost
#define kmlhost = "https://raw.githubusercontent.com/slacgismo/gridlabd/master/gldcore/rt"
#else
#set kmlhost="https://raw.githubusercontent.com/slacgismo/gridlabd/master/gldcore/rt"
#endif //kmlhost
// modelname is set to test_json_conversion.glm
// execdir is set to /usr/local/opt/gridlabd/4.2.1-200327-develop_fix_json_conversion/bin
#ifndef strictnames
global bool strictnames TRUE;
#else
#set strictnames=TRUE
#endif //strictnames
#ifndef website
#define website = "http://www.gridlabd.org/"
#else
#set website="http://www.gridlabd.org/"
#endif //website
#ifndef urlbase
#define urlbase = "http://www.gridlabd.org/"
#else
#set urlbase="http://www.gridlabd.org/"
#endif //urlbase
#ifndef randomseed
global int32 randomseed 7;
#else
#set randomseed=7
#endif //randomseed
#ifndef randomstate
global int32 randomstate 1707416375;
#else
#set randomstate=1707416375
#endif //randomstate
// include is set to 
// trace is set to 
#ifndef gdb_window
global bool gdb_window FALSE;
#else
#set gdb_window=FALSE
#endif //gdb_window
#ifndef tmp
#define tmp = "/Users/david/.gridlabd/tmp"
#else
#set tmp="/Users/david/.gridlabd/tmp"
#endif //tmp
#ifndef force_compile
global int32 force_compile 0;
#else
#set force_compile=0
#endif //force_compile
#ifndef nolocks
global bool nolocks FALSE;
#else
#set nolocks=FALSE
#endif //nolocks
#ifndef skipsafe
global bool skipsafe FALSE;
#else
#set skipsafe=FALSE
#endif //skipsafe
#ifndef dateformat
global enumeration dateformat ISO;
#else
#set dateformat=ISO
#endif //dateformat
#ifndef init_sequence
global enumeration init_sequence DEFERRED;
#else
#set init_sequence=DEFERRED
#endif //init_sequence
#ifndef minimum_timestep
global int32 minimum_timestep 1;
#else
#set minimum_timestep=1
#endif //minimum_timestep
// platform is set to MACOSX
#ifndef suppress_repeat_messages
global bool suppress_repeat_messages TRUE;
#else
#set suppress_repeat_messages=TRUE
#endif //suppress_repeat_messages
#ifndef maximum_synctime
global int32 maximum_synctime 60;
#else
#set maximum_synctime=60
#endif //maximum_synctime
#ifndef run_realtime
global bool run_realtime FALSE;
#else
#set run_realtime=FALSE
#endif //run_realtime
#ifndef enter_realtime
global timestamp enter_realtime "NEVER";
#else
#set enter_realtime="NEVER"
#endif //enter_realtime
// realtime_metric is set to +0
#ifndef no_deprecate
global bool no_deprecate FALSE;
#else
#set no_deprecate=FALSE
#endif //no_deprecate
// streaming_io is set to FALSE
// compileonly is set to FALSE
#ifndef relax_naming_rules
global bool relax_naming_rules FALSE;
#else
#set relax_naming_rules=FALSE
#endif //relax_naming_rules
#ifndef browser
#define browser = "safari"
#else
#set browser="safari"
#endif //browser
#ifndef server_portnum
global int32 server_portnum 0;
#else
#set server_portnum=0
#endif //server_portnum
#ifndef server_quit_on_close
global bool server_quit_on_close FALSE;
#else
#set server_quit_on_close=FALSE
#endif //server_quit_on_close
// client_allowed is set to 
#ifndef autoclean
global bool autoclean TRUE;
#else
#set autoclean=TRUE
#endif //autoclean
#ifndef technology_readiness_level
global enumeration technology_readiness_level UNKNOWN;
#else
#set technology_readiness_level=UNKNOWN
#endif //technology_readiness_level
#ifndef show_progress
global bool show_progress TRUE;
#else
#set show_progress=TRUE
#endif //show_progress
#ifndef checkpoint_type
global enumeration checkpoint_type NONE;
#else
#set checkpoint_type=NONE
#endif //checkpoint_type
// checkpoint_file is set to 
#ifndef checkpoint_seqnum
global int32 checkpoint_seqnum 0;
#else
#set checkpoint_seqnum=0
#endif //checkpoint_seqnum
#ifndef checkpoint_interval
global int32 checkpoint_interval 0;
#else
#set checkpoint_interval=0
#endif //checkpoint_interval
#ifndef checkpoint_keepall
global bool checkpoint_keepall FALSE;
#else
#set checkpoint_keepall=FALSE
#endif //checkpoint_keepall
#ifndef check_version
global bool check_version FALSE;
#else
#set check_version=FALSE
#endif //check_version
#ifndef random_number_generator
global enumeration random_number_generator RNG3;
#else
#set random_number_generator=RNG3
#endif //random_number_generator
#ifndef mainloop_state
global enumeration mainloop_state INIT;
#else
#set mainloop_state=INIT
#endif //mainloop_state
#ifndef pauseat
global timestamp pauseat "NEVER";
#else
#set pauseat="NEVER"
#endif //pauseat
// infourl is set to http://gridlab-d.shoutwiki.com/w/index.php?title=Special%3ASearch&fulltext=Search&search=
#ifndef hostname
#define hostname = "localhost"
#else
#set hostname="localhost"
#endif //hostname
#ifndef hostaddr
global char32 hostaddr "127.0.0.1";
#else
#set hostaddr="127.0.0.1"
#endif //hostaddr
#ifndef autostart_gui
global bool autostart_gui TRUE;
#else
#set autostart_gui=TRUE
#endif //autostart_gui
// master is set to 
#ifndef master_port
global int64 master_port 0;
#else
#set master_port=0
#endif //master_port
#ifndef multirun_mode
global enumeration multirun_mode STANDALONE;
#else
#set multirun_mode=STANDALONE
#endif //multirun_mode
#ifndef multirun_conn
global enumeration multirun_conn NONE;
#else
#set multirun_conn=NONE
#endif //multirun_conn
#ifndef signal_timeout
global int32 signal_timeout 5000;
#else
#set signal_timeout=5000
#endif //signal_timeout
#ifndef slave_port
global int16 slave_port 6267;
#else
#set slave_port=6267
#endif //slave_port
#ifndef slave_id
global int64 slave_id 0;
#else
#set slave_id=0
#endif //slave_id
// return_code is set to 512
// exit_code is set to 5
#ifndef module_compiler_flags
global set module_compiler_flags NONE;
#else
#set module_compiler_flags=NONE
#endif //module_compiler_flags
// init_max_defer is set to 64
#ifndef mt_analysis
global bool mt_analysis FALSE;
#else
#set mt_analysis=FALSE
#endif //mt_analysis
#ifndef inline_block_size
global int32 inline_block_size 1048576;
#else
#set inline_block_size=1048576
#endif //inline_block_size
#ifndef validate
global set validate TSTD|RALL;
#else
#set validate=TSTD|RALL
#endif //validate
#ifndef sanitize
global set sanitize NAMES|POSITIONS;
#else
#set sanitize=NAMES|POSITIONS
#endif //sanitize
#ifndef sanitize_prefix
global char8 sanitize_prefix "GLD_";
#else
#set sanitize_prefix="GLD_"
#endif //sanitize_prefix
#ifndef sanitize_index
#define sanitize_index = ".txt"
#else
#set sanitize_index=".txt"
#endif //sanitize_index
// sanitize_offset is set to 
#ifndef simulation_mode
global enumeration simulation_mode INIT;
#else
#set simulation_mode=INIT
#endif //simulation_mode
#ifndef deltamode_allowed
global bool deltamode_allowed FALSE;
#else
#set deltamode_allowed=FALSE
#endif //deltamode_allowed
#ifndef deltamode_timestep
global int32 deltamode_timestep 10000000;
#else
#set deltamode_timestep=10000000
#endif //deltamode_timestep
#ifndef deltamode_maximumtime
global int64 deltamode_maximumtime 3600000000000;
#else
#set deltamode_maximumtime=3600000000000
#endif //deltamode_maximumtime
#ifndef deltaclock
global int64 deltaclock 0;
#else
#set deltaclock=0
#endif //deltaclock
#ifndef delta_current_clock
global double delta_current_clock +0;
#else
#set delta_current_clock=+0
#endif //delta_current_clock
// deltamode_updateorder is set to 
#ifndef deltamode_iteration_limit
global int32 deltamode_iteration_limit 10;
#else
#set deltamode_iteration_limit=10
#endif //deltamode_iteration_limit
#ifndef deltamode_forced_extra_timesteps
global int32 deltamode_forced_extra_timesteps 0;
#else
#set deltamode_forced_extra_timesteps=0
#endif //deltamode_forced_extra_timesteps
#ifndef deltamode_forced_always
global bool deltamode_forced_always FALSE;
#else
#set deltamode_forced_always=FALSE
#endif //deltamode_forced_always
#ifndef run_powerworld
global bool run_powerworld FALSE;
#else
#set run_powerworld=FALSE
#endif //run_powerworld
#ifndef bigranks
global bool bigranks TRUE;
#else
#set bigranks=TRUE
#endif //bigranks
// exename is set to /usr/local/opt/gridlabd/4.2.1-200327-develop_fix_json_conversion/bin/gridlabd.bin
#ifndef wget_options
#define wget_options = "maxsize:100MB;update:newer"
#else
#set wget_options="maxsize:100MB;update:newer"
#endif //wget_options
#ifndef curl_options
#define curl_options = "maxsize:100MB;update:newer"
#else
#set curl_options="maxsize:100MB;update:newer"
#endif //curl_options
#ifndef svnroot
#define svnroot = "http://gridlab-d.svn.sourceforge.net/svnroot/gridlab-d"
#else
#set svnroot="http://gridlab-d.svn.sourceforge.net/svnroot/gridlab-d"
#endif //svnroot
#ifndef github
#define github = "https://github.com/gridlab-d"
#else
#set github="https://github.com/gridlab-d"
#endif //github
#ifndef gitraw
#define gitraw = "https://raw.githubusercontent.com/gridlab-d"
#else
#set gitraw="https://raw.githubusercontent.com/gridlab-d"
#endif //gitraw
#ifndef allow_reinclude
global bool allow_reinclude FALSE;
#else
#set allow_reinclude=FALSE
#endif //allow_reinclude
#ifndef output_message_context
global set output_message_context ALL;
#else
#set output_message_context=ALL
#endif //output_message_context
#ifndef permissive_access
global int32 permissive_access 0;
#else
#set permissive_access=0
#endif //permissive_access
#ifndef relax_undefined_if
global bool relax_undefined_if FALSE;
#else
#set relax_undefined_if=FALSE
#endif //relax_undefined_if
#ifndef literal_if
global bool literal_if TRUE;
#else
#set literal_if=TRUE
#endif //literal_if
#ifndef validto_context
global enumeration validto_context 1414743296;
#else
#set validto_context=1414743296
#endif //validto_context
#ifndef daemon_configfile
#define daemon_configfile = "gridlabd.cnf"
#else
#set daemon_configfile="gridlabd.cnf"
#endif //daemon_configfile
// timezone_locale is set to EST5EDT
#ifndef glm_save_options
global set glm_save_options LEGACY;
#else
#set glm_save_options=LEGACY
#endif //glm_save_options
#ifndef filesave_options
global set filesave_options ALL;
#else
#set filesave_options=ALL
#endif //filesave_options
#ifndef ignore_errors
global bool ignore_errors FALSE;
#else
#set ignore_errors=FALSE
#endif //ignore_errors
#ifndef keep_progress
global bool keep_progress FALSE;
#else
#set keep_progress=FALSE
#endif //keep_progress
#ifndef allow_variant_aggregates
global bool allow_variant_aggregates FALSE;
#else
#set allow_variant_aggregates=FALSE
#endif //allow_variant_aggregates
// SECONDRUN is set to 
#ifndef STARTTIME
#define STARTTIME = "2020-01-01 00:00:00"
#else
#set STARTTIME="2020-01-01 00:00:00"
#endif //STARTTIME
#ifndef STOPTIME
#define STOPTIME = "2020-01-02 00:00:00"
#else
#set STOPTIME="2020-01-02 00:00:00"
#endif //STOPTIME
// climate::message_flags is set to DEBUG|VERBOSE
// residential::message_flags is set to DEBUG|VERBOSE
// residential::default_line_voltage is set to +240+0d V
// residential::default_line_current is set to +0+0j A
// residential::default_outdoor_temperature is set to +74 degF
// residential::default_humidity is set to +75 %
// residential::default_solar is set to +0 Btu/sf
// residential::default_etp_iterations is set to 100
// residential::ANSI_voltage_check is set to TRUE
// residential::enable_subsecond_models is set to FALSE
// residential::deltamode_timestep is set to +1e+07 ns
// residential::all_house_delta is set to FALSE
// residential::implicit_enduses is set to DRYER|CLOTHESWASHER|WATERHEATER|RANGE|REFRIGERATOR|FREEZER|MICROWAVE|DISHWASHER|PLUGS|LIGHTS
// residential::implicit_enduse_source is set to ELCAP1990
// residential::house_low_temperature_warning is set to +55 degF
// residential::house_high_temperature_warning is set to +95 degF
// residential::thermostat_control_warning is set to +4.94066e-324
// residential::system_dwell_time is set to +1 s
// residential::aux_cutin_temperature is set to +10 degF
// residential::paneldump_filename is set to paneldump.csv
// residential::paneldump_interval is set to 0
// residential::paneldump_resolution is set to +0
#ifndef default_nominal_voltage_A
global complex default_nominal_voltage_A +240+0d;
#else
#set default_nominal_voltage_A=+240+0d
#endif //default_nominal_voltage_A
#ifndef default_nominal_voltage_B
global complex default_nominal_voltage_B +268.328-26.5651d;
#else
#set default_nominal_voltage_B=+268.328-26.5651d
#endif //default_nominal_voltage_B
#ifndef default_nominal_voltage_C
global complex default_nominal_voltage_C +268.328+26.5651d;
#else
#set default_nominal_voltage_C=+268.328+26.5651d
#endif //default_nominal_voltage_C
#ifndef default_nominal_voltage
global double default_nominal_voltage +240;
#else
#set default_nominal_voltage=+240
#endif //default_nominal_voltage
#ifndef default_weekday_code
global char32 default_weekday_code "WEEKDAY";
#else
#set default_weekday_code="WEEKDAY"
#endif //default_weekday_code
#ifndef default_saturday_code
global char32 default_saturday_code "SATURDAY";
#else
#set default_saturday_code="SATURDAY"
#endif //default_saturday_code
#ifndef default_sunday_code
global char32 default_sunday_code "SUNDAY";
#else
#set default_sunday_code="SUNDAY"
#endif //default_sunday_code
#ifndef default_holiday_code
global char32 default_holiday_code "HOLIDAY";
#else
#set default_holiday_code="HOLIDAY"
#endif //default_holiday_code
#ifndef default_month_heading
global char32 default_month_heading "Month";
#else
#set default_month_heading="Month"
#endif //default_month_heading
#ifndef default_daytype_heading
global char32 default_daytype_heading "Daytype";
#else
#set default_daytype_heading="Daytype"
#endif //default_daytype_heading
#ifndef default_hour_heading
global char32 default_hour_heading "Hour";
#else
#set default_hour_heading="Hour"
#endif //default_hour_heading
#ifndef default_temperature_heating_balance
global double default_temperature_heating_balance +55;
#else
#set default_temperature_heating_balance=+55
#endif //default_temperature_heating_balance
#ifndef default_temperature_cooling_balance
global double default_temperature_cooling_balance +70;
#else
#set default_temperature_cooling_balance=+70
#endif //default_temperature_cooling_balance
#ifndef default_temperature_heating_base
global double default_temperature_heating_base +55;
#else
#set default_temperature_heating_base=+55
#endif //default_temperature_heating_base
#ifndef default_temperature_cooling_base
global double default_temperature_cooling_base +70;
#else
#set default_temperature_cooling_base=+70
#endif //default_temperature_cooling_base
#ifndef default_temperature_heating_design
global double default_temperature_heating_design +0;
#else
#set default_temperature_heating_design=+0
#endif //default_temperature_heating_design
#ifndef default_temperature_cooling_design
global double default_temperature_cooling_design +100;
#else
#set default_temperature_cooling_design=+100
#endif //default_temperature_cooling_design
#ifndef default_solargain_base
global double default_solargain_base +0;
#else
#set default_solargain_base=+0
#endif //default_solargain_base
#ifndef default_price_base
global double default_price_base +0;
#else
#set default_price_base=+0
#endif //default_price_base
#ifndef default_occupancy_base
global double default_occupancy_base +1;
#else
#set default_occupancy_base=+1
#endif //default_occupancy_base
#ifndef temperature_variable_name
#define temperature_variable_name = "temperature"
#else
#set temperature_variable_name="temperature"
#endif //temperature_variable_name
#ifndef solargain_variable_name
#define solargain_variable_name = "solar_direct"
#else
#set solargain_variable_name="solar_direct"
#endif //solargain_variable_name
#ifndef price_variable_name
#define price_variable_name = "energy_price"
#else
#set price_variable_name="energy_price"
#endif //price_variable_name
#ifndef occupancy_variable_name
#define occupancy_variable_name = "occupancy_fraction"
#else
#set occupancy_variable_name="occupancy_fraction"
#endif //occupancy_variable_name
// tape::gnuplot_path is set to /usr/bin/gnuplot
// tape::flush_interval is set to 0
// tape::csv_data_only is set to 1
// tape::csv_keep_clean is set to 0
// tape::delta_mode_needed is set to NEVER
 // CLASSES
class waterheater {
	loadshape wh_shape;
	char1024 supernode_name;
}
 // SCHEDULES
schedule waterheater_demand_prob{
	* 5-21 * * * 0.99;
	* 22-4 * * * 0.01;

}
 // OBJECTS
object climate{
	name "TX_Houston";
	solar_elevation "0 rad";
	solar_azimuth "0 rad";
	solar_zenith "0 rad";
	tmyfile "../WA-Yakima.tmy3";
	temperature "59 degF";
	humidity "0.75 pu";
	solar_flux "0 W/sf";
	solar_direct "0 W/sf";
	solar_diffuse "0 W/sf";
	solar_global "0 W/sf";
	extraterrestrial_global_horizontal "0 W/sf";
	extraterrestrial_direct_normal "126.998 W/sf";
	pressure "1013.25 mbar";
	wind_speed "0 m/s";
	wind_dir "0 rad";
	wind_gust "0 m/s";
	record.low "0 degF";
	record.low_day "0";
	record.high "0 degF";
	record.high_day "0";
	record.solar "0 W/sf";
	rainfall "0 in/h";
	snowdepth "0 in";
	interpolate "QUADRATIC";
	solar_horiz "0";
	solar_north "0";
	solar_northeast "0";
	solar_east "0";
	solar_southeast "0";
	solar_south "0";
	solar_southwest "0";
	solar_west "0";
	solar_northwest "0";
	solar_raw "0 W/sf";
	ground_reflectivity "0.3 pu";
	cloud_model "NONE";
	cloud_opacity "1 pu";
	opq_sky_cov "0 pu";
	cloud_speed_factor "1 pu";
	solar_cloud_direct "0 W/sf";
	solar_cloud_diffuse "0 W/sf";
	solar_cloud_global "0 W/sf";
	cloud_alpha "400 pu";
	cloud_num_layers "40 pu";
	cloud_aerosol_transmissivity "0.95 pu";
	heat_index "0 degF";
}
object house{
	name "house_1";
	floor_area "1153.06 sf";
	gross_wall_area "0 sf";
	ceiling_height "0 ft";
	aspect_ratio "0";
	envelope_UA "0 Btu/degF/h";
	window_wall_ratio "0";
	number_of_doors "0";
	exterior_wall_fraction "0";
	interior_exterior_wall_ratio "0";
	exterior_ceiling_fraction "0";
	exterior_floor_fraction "0";
	window_shading "0";
	window_exterior_transmission_coefficient "0";
	airchange_per_hour "-1 unit/h";
	airchange_UA "0 Btu/degF/h";
	UA "-1 Btu/degF/h";
	internal_gain "0 Btu/h";
	solar_gain "0 Btu/h";
	incident_solar_radiation "0 Btu/h/sf";
	heat_cool_gain "0 Btu/h";
	include_solar_quadrant "ALLWALLS";
	horizontal_diffuse_solar_radiation "0 Btu/h/sf";
	north_incident_solar_radiation "0 Btu/h/sf";
	northwest_incident_solar_radiation "0 Btu/h/sf";
	west_incident_solar_radiation "0 Btu/h/sf";
	southwest_incident_solar_radiation "0 Btu/h/sf";
	south_incident_solar_radiation "0 Btu/h/sf";
	southeast_incident_solar_radiation "0 Btu/h/sf";
	east_incident_solar_radiation "0 Btu/h/sf";
	northeast_incident_solar_radiation "0 Btu/h/sf";
	heating_cop_curve "DEFAULT";
	heating_cap_curve "DEFAULT";
	cooling_cop_curve "DEFAULT";
	cooling_cap_curve "DEFAULT";
	use_latent_heat "TRUE";
	include_fan_heatgain "TRUE";
	thermostat_deadband "0 degF";
	dlc_offset "0 degF";
	thermostat_cycle_time "0";
	thermostat_off_cycle_time "-1";
	thermostat_on_cycle_time "-1";
	heating_setpoint "65 degF";
	cooling_setpoint "76 degF";
	design_heating_setpoint "0 degF";
	design_cooling_setpoint "0 degF";
	over_sizing_factor "0";
	simulate_window_openings "FALSE";
	is_window_open "0";
	window_low_temperature_cutoff "60 degF";
	window_high_temperature_cutoff "80 degF";
	window_quadratic_coefficient "0";
	window_linear_coefficient "0";
	window_constant_coefficient "1";
	window_temperature_delta "5";
	design_heating_capacity "0 Btu/h";
	design_cooling_capacity "0 Btu/h";
	cooling_design_temperature "0 degF";
	heating_design_temperature "0 degF";
	design_peak_solar "0 Btu/h/sf";
	design_internal_gains "0 W/sf";
	air_heat_fraction "0 pu";
	mass_solar_gain_fraction "0 pu";
	mass_internal_gain_fraction "0 pu";
	auxiliary_heat_capacity "0 Btu/h";
	aux_heat_deadband "0 degF";
	aux_heat_temperature_lockout "0 degF";
	aux_heat_time_delay "0 s";
	cooling_supply_air_temp "50 degF";
	heating_supply_air_temp "150 degF";
	duct_pressure_drop "0 inH2O";
	fan_design_power "-1 W";
	fan_low_power_fraction "0 pu";
	fan_design_airflow "0 cfm";
	fan_impedance_fraction "0.2534 pu";
	fan_power_fraction "0.0135 pu";
	fan_current_fraction "0.7332 pu";
	fan_power_factor "0.96 pu";
	heating_COP "0 pu";
	cooling_COP "0 Btu/kWh";
	air_temperature "0 degF";
	outdoor_temperature "0 degF";
	outdoor_rh "0 %";
	mass_heat_capacity "0 Btu/degF";
	mass_heat_coeff "0 Btu/degF/h";
	mass_temperature "0 degF";
	air_volume "0 cf";
	air_mass "0 lb";
	air_heat_capacity "0 Btu/degF";
	latent_load_fraction "0 pu";
	total_thermal_mass_per_floor_area "0 Btu/degF/sf";
	interior_surface_heat_transfer_coeff "0 Btu/h/degF/sf";
	number_of_stories "0";
	is_AUX_on "0";
	is_HEAT_on "0";
	is_COOL_on "0";
	thermal_storage_present "0";
	thermal_storage_in_use "0";
	thermostat_mode "AUTO";
	system_type "NONE";
	auxiliary_strategy "NONE";
	system_mode "UNKNOWN";
	last_system_mode "UNKNOWN";
	heating_system_type "HEAT_PUMP";
	cooling_system_type "UNKNOWN";
	auxiliary_system_type "UNKNOWN";
	fan_type "UNKNOWN";
	thermal_integrity_level "UNKNOWN";
	glass_type "LOW_E_GLASS";
	window_frame "THERMAL_BREAK";
	glazing_treatment "CLEAR";
	glazing_layers "TWO";
	motor_model "NONE";
	motor_efficiency "AVERAGE";
	last_mode_timer "0";
	hvac_motor_efficiency "1 unit";
	hvac_motor_loss_power_factor "0.125 unit";
	Rroof "0 degF*sf*h/Btu";
	Rwall "0 degF*sf*h/Btu";
	Rfloor "0 degF*sf*h/Btu";
	Rwindows "0 degF*sf*h/Btu";
	Rdoors "0 degF*sf*h/Btu";
	hvac_breaker_rating "0 A";
	hvac_power_factor "0.75 unit";
	hvac_load "0 kW";
	last_heating_load "0 kW";
	last_cooling_load "0 kW";
	hvac_power "0+0j kVA";
	total_load "0 kW";
	panel.energy "0+0j kVAh";
	panel.power "0+0j kVA";
	panel.peak_demand "0+0j kVA";
	panel.heatgain "0 Btu/h";
	panel.cumulative_heatgain "0 Btu";
	panel.heatgain_fraction "0 pu";
	panel.current_fraction "0 pu";
	panel.impedance_fraction "0 pu";
	panel.power_fraction "0 pu";
	panel.power_factor "0";
	panel.constant_power "0+0j kVA";
	panel.constant_current "0+0j kVA";
	panel.constant_admittance "0+0j kVA";
	panel.voltage_factor "0 pu";
	panel.breaker_amps "0 A";
	panel.configuration "IS110";
	design_internal_gain_density "0.6 W/sf";
	compressor_on "FALSE";
	compressor_count "0";
	hvac_last_on "NEVER";
	hvac_last_off "NEVER";
	hvac_period_length "0 s";
	hvac_duty_cycle "0";
	thermostat_control "FULL";
	load_power_fraction "0.8";
	load_impedance_fraction "0.2";
	load_current_fraction "0";
	shape "type: unknown";
	energy "0+0j kVAh";
	power "0+0j kVA";
	peak_demand "0+0j kVA";
	heatgain "0 Btu/h";
	cumulative_heatgain "0 Btu";
	heatgain_fraction "0 pu";
	current_fraction "0 pu";
	impedance_fraction "0.2 pu";
	power_fraction "0.8 pu";
	power_factor "0";
	constant_power "0+0j kVA";
	constant_current "0+0j kVA";
	constant_admittance "0+0j kVA";
	voltage_factor "0 pu";
	breaker_amps "0 A";
	configuration "IS110";
	override "NORMAL";
	power_state "OFF";
}
object waterheater{
	name "waterheater_1";
	parent "house_1";
	tank_volume "50 gal";
	tank_UA "2 Btu*h/degF";
	tank_diameter "0 ft";
	tank_height "0 ft";
	water_demand "0 gpm";
	heating_element_capacity "4.5 kW";
	inlet_water_temperature "60 degF";
	waterheater_model "ONENODE";
	heat_mode "ELECTRIC";
	location "GARAGE";
	tank_setpoint "130 degF";
	thermostat_deadband "2.3109 degF";
	temperature "0 degF";
	height "0 ft";
	demand "0+0j kVA";
	actual_load "0 kW";
	previous_load "0 kW";
	actual_power "0+0j kVA";
	is_waterheater_on "0";
	gas_fan_power "-1 kW";
	gas_standby_power "-1 kW";
	heat_pump_coefficient_of_performance "0 Btu/kWh";
	Tcontrol "0 degF";
	current_tank_status "FULL";
	dr_signal "1";
	COP "0";
	operating_mode "0";
	fortran_sim_time "0 s";
	waterheater_power "0 kW";
	load_state "DEPLETING";
	re_override "OV_NORMAL";
	wh_shape "type: pulsed; schedule: waterheater_demand_prob; energy: 7.2 kWh; count: 6; power: 0.3 kW";
	shape "type: unknown";
	energy "0+0j kVAh";
	power "0+0j kVA";
	peak_demand "0+0j kVA";
	heatgain "0 Btu/h";
	cumulative_heatgain "0 Btu";
	heatgain_fraction "0 pu";
	current_fraction "0 pu";
	impedance_fraction "1 pu";
	power_fraction "0 pu";
	power_factor "1";
	constant_power "0+0j kVA";
	constant_current "0+0j kVA";
	constant_admittance "0+0j kVA";
	voltage_factor "0 pu";
	breaker_amps "30 A";
	configuration "IS220";
	override "NORMAL";
	power_state "UNKNOWN";
}
object recorder{
	name "recorder_3";
	parent "waterheater_1";
	file "new_run.csv";
	filetype "txt";
	mode "file";
	limit "0";
	flush "-1";
	format "FALSE";
	interval "60 s";
	property "water_demand";
	output "SCREEN";
	header_units "DEFAULT";
	line_units "DEFAULT";
}