name: develop-images

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  buildUbuntuDockerhub:

    runs-on: ubuntu-latest
    environment: Integration

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./build-aux/Dockerfiles/Dockerfile.ul
        push: true
        tags: hipas/gridlabd-develop-ubuntu:latest

  buildDebianDockerhub:

    runs-on: ubuntu-latest
    environment: Integration

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./build-aux/Dockerfiles/Dockerfile.dl
        push: true
        tags: hipas/gridlabd-develop-debian:latest

  buildAWSUbuntu:

    runs-on: ubuntu-latest
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

  buildMacos12FastS3:

    runs-on: macos-12
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itworks
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}

  buildMacos11FastS3:

    runs-on: macos-11
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itwork
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}

  buildUbuntu22FastS3:

    runs-on: ubuntu-latest
    container: ubuntu:22.04
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itwor
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}

  buildUbuntu20FastS3:

    runs-on: ubuntu-latest
    container: ubuntu:20.04
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itwo
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}

  buildDebian11FastS3:

    runs-on: ubuntu-latest
    container: debian:11
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itw
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}

  buildDebian10FastS3:

    runs-on: ubuntu-latest
    container: debian:10
    environment: Integration

    steps:
    - uses: actions/checkout@v2

      # this is to fix GIT not liking owner of the checkout dir
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        touch synctext.itworkss
        mkdir -p /tmp/workspace/build
        mv -v ./synctest.itworks /tmp/workspace/build/
        aws s3 sync /tmp/workspace/build/ s3://${{ secrets.DEV_S3_URL }}
