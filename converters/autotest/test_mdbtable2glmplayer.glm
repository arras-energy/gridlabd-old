// converters/autotest/test_mdbtable2glmplayer.glm
//
// NOTE
//
// This test can only be run by users who have access to the AMI data stored in
//
//   https://github.com/dchassin/camden_model
//
// To access this data you must read, agree to, and sign the NDA covering this data.
//

#ifmissing /usr/local/bin/mdb-schema

#warning mdbtools is not available

#else

#ifmissing ami_data.mdb

#ifmissing ami_data.mdb.zip

#ifdef GITHUB_TOKEN
#system curl -sL -o ami_data.mdb.zip --header "Authorization: token ${GITHUB_TOKEN}" 'https://raw.githubusercontent.com/dchassin/camden_model/master/AMI_KWH.mdb.zip'
#else
#warning unable to download AMI data from secure repo without GITHUB_TOKEN environment variable defined
#endif // GITHUB_TOKEN

#endif // missing zip

#ifexist ami_data.mdb.zip
#exec unzip ami_data.mdb AMI_KWH.mdb >/dev/null
#system mv AMI_KWH.mdb ami_data.mdb
#system rm -f ami_data.mdb.zip
#endif // exist zip

#endif // missing mdb

#ifexist ami_data.mdb
#set relax_naming_rules=TRUE

class test
{
	double power[W];
}

#input "ami_data.mdb" -t table -f player -p table=AMI -p csvfile=ami -p index=Usage_Date,Hour_Num -p parent=Structure_No -p scale=1000 -p values=SUM_of_Usage -p properties=power

clock 
{
	timezone "PST+8PDT";
	starttime ${AMI_STARTTIME};
	stoptime ${AMI_STOPTIME};
}

module powerflow;

#for OBJ in ${AMI_PLAYERS}
object test
{
	name "${OBJ}";
	power 0.0;
}
#done

module tape
{
	csv_header_type NONE;
}
object collector
{
	file "test_mdbtable2glmplayer.csv";
	group "class=test";
	property "sum(power)";
	interval -1;
}

#ifexist ../test_mdbtable2glmplayer.csv
#on_exit 0 diff ../test_mdbtable2glmplayer.csv test_mdbtable2glmplayer.csv > gridlabd.diff
#endif // exist ../test_mdbtable2glmplayer.csv

#endif // exist ami_data.mdb

#endif // missing /usr/local/bin/mdb-schema
